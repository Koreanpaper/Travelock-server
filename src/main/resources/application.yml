spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: Travelock-server

  # include key properties file
  profiles:
    include: API-KEY

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: <your-naver-client-id>
            client-secret: <your-naver-client-secret>
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
          google:
            client-name: google
            client-id: <your-google-client-id>
            client-secret: <your-google-client-secret>
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          kakao:
            client-name: Kakao
            client-id: <your-kakao-client-id>
            client-secret: <your-kakao-client-secret>
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
            client-authentication-method: client_secret_post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/travelock_db?useSSL=false&useServerPrepStmts=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
    username: root
    password: 1234
    initialization-mode: always  # 애플리케이션 시작 시 data.sql 실행 보장

  jpa:
    defer-datasource-initialization: true
    show-sql: true  # 콘솔에 SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # SQL을 보기 좋게 포맷팅
        dialect: org.hibernate.dialect.MariaDBDialect
        jdbc:
          batch_size: 50  # 한 번에 처리할 엔티티 수
        order_inserts: true
        order_updates: true
        jdbc.batch_versioned_data: true
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

  sql:
    init:
      mode: always  # 데이터 소스 초기화 모드 설정
      continue-on-error: false  # 오류 발생 시 초기화 중단 여부

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  data:
    redis:
      host: localhost
      port: 6379

# Swagger 3.0 설정
springdoc:
  swagger-ui:
    path: /api-docs
  api-docs:
    path: /v3/api-docs
    enabled: true

application:
  security:
    jwt:
      secret-key: awefawefawefawef123412341234a23ta23ta23ta23ta23ta23t

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG  # SQL 쿼리 실행 로그를 출력
        type:
          descriptor:
            sql:
              BasicBinder: TRACE  # 파라미터 바인딩 정보 출력

server:
  port: 8080